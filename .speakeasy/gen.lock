lockVersion: 2.0.0
id: 322c4806-8b53-493c-a05f-50d4d113c747
management:
  docChecksum: f2141b28c9eadb6537f4ce6c48a3bbfc
  docVersion: 2.0.0
  speakeasyVersion: 1.570.1
  generationVersion: 2.638.1
  releaseVersion: 0.5.3
  configChecksum: 7ff44a5c00c768590e144f1378281a4a
features:
  terraform:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.2.1
    core: 3.41.12
    globalSecurity: 2.81.12
    globalServerURLs: 2.82.2
    inputOutputModels: 2.83.0
    nullables: 0.0.0
    retries: 2.81.3
    unions: 2.81.17
generatedFiles:
  - .gitattributes
  - USAGE.md
  - examples/README.md
  - examples/data-sources/kong-mesh_hostname_generator_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh/data-source.tf
  - examples/data-sources/kong-mesh_mesh_access_log/data-source.tf
  - examples/data-sources/kong-mesh_mesh_access_log_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_circuit_breaker/data-source.tf
  - examples/data-sources/kong-mesh_mesh_circuit_breaker_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_external_service/data-source.tf
  - examples/data-sources/kong-mesh_mesh_external_service_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_fault_injection/data-source.tf
  - examples/data-sources/kong-mesh_mesh_fault_injection_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_gateway/data-source.tf
  - examples/data-sources/kong-mesh_mesh_gateway_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_global_rate_limit/data-source.tf
  - examples/data-sources/kong-mesh_mesh_global_rate_limit_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_health_check/data-source.tf
  - examples/data-sources/kong-mesh_mesh_health_check_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_hostname_generator/data-source.tf
  - examples/data-sources/kong-mesh_mesh_http_route/data-source.tf
  - examples/data-sources/kong-mesh_mesh_http_route_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_load_balancing_strategy/data-source.tf
  - examples/data-sources/kong-mesh_mesh_load_balancing_strategy_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_metric/data-source.tf
  - examples/data-sources/kong-mesh_mesh_metric_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_multi_zone_service/data-source.tf
  - examples/data-sources/kong-mesh_mesh_multi_zone_service_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_opa/data-source.tf
  - examples/data-sources/kong-mesh_mesh_opa_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_passthrough/data-source.tf
  - examples/data-sources/kong-mesh_mesh_passthrough_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_proxy_patch/data-source.tf
  - examples/data-sources/kong-mesh_mesh_proxy_patch_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_rate_limit/data-source.tf
  - examples/data-sources/kong-mesh_mesh_rate_limit_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_retry/data-source.tf
  - examples/data-sources/kong-mesh_mesh_retry_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_service/data-source.tf
  - examples/data-sources/kong-mesh_mesh_service_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_tcp_route/data-source.tf
  - examples/data-sources/kong-mesh_mesh_tcp_route_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_timeout/data-source.tf
  - examples/data-sources/kong-mesh_mesh_timeout_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_tls/data-source.tf
  - examples/data-sources/kong-mesh_mesh_tls_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_trace/data-source.tf
  - examples/data-sources/kong-mesh_mesh_trace_list/data-source.tf
  - examples/data-sources/kong-mesh_mesh_traffic_permission/data-source.tf
  - examples/data-sources/kong-mesh_mesh_traffic_permission_list/data-source.tf
  - examples/provider/provider.tf
  - examples/resources/kong-mesh_mesh/import.sh
  - examples/resources/kong-mesh_mesh/resource.tf
  - examples/resources/kong-mesh_mesh_access_log/import.sh
  - examples/resources/kong-mesh_mesh_access_log/resource.tf
  - examples/resources/kong-mesh_mesh_circuit_breaker/import.sh
  - examples/resources/kong-mesh_mesh_circuit_breaker/resource.tf
  - examples/resources/kong-mesh_mesh_external_service/import.sh
  - examples/resources/kong-mesh_mesh_external_service/resource.tf
  - examples/resources/kong-mesh_mesh_fault_injection/import.sh
  - examples/resources/kong-mesh_mesh_fault_injection/resource.tf
  - examples/resources/kong-mesh_mesh_gateway/import.sh
  - examples/resources/kong-mesh_mesh_gateway/resource.tf
  - examples/resources/kong-mesh_mesh_global_rate_limit/import.sh
  - examples/resources/kong-mesh_mesh_global_rate_limit/resource.tf
  - examples/resources/kong-mesh_mesh_health_check/import.sh
  - examples/resources/kong-mesh_mesh_health_check/resource.tf
  - examples/resources/kong-mesh_mesh_hostname_generator/import.sh
  - examples/resources/kong-mesh_mesh_hostname_generator/resource.tf
  - examples/resources/kong-mesh_mesh_http_route/import.sh
  - examples/resources/kong-mesh_mesh_http_route/resource.tf
  - examples/resources/kong-mesh_mesh_load_balancing_strategy/import.sh
  - examples/resources/kong-mesh_mesh_load_balancing_strategy/resource.tf
  - examples/resources/kong-mesh_mesh_metric/import.sh
  - examples/resources/kong-mesh_mesh_metric/resource.tf
  - examples/resources/kong-mesh_mesh_multi_zone_service/import.sh
  - examples/resources/kong-mesh_mesh_multi_zone_service/resource.tf
  - examples/resources/kong-mesh_mesh_opa/import.sh
  - examples/resources/kong-mesh_mesh_opa/resource.tf
  - examples/resources/kong-mesh_mesh_passthrough/import.sh
  - examples/resources/kong-mesh_mesh_passthrough/resource.tf
  - examples/resources/kong-mesh_mesh_proxy_patch/import.sh
  - examples/resources/kong-mesh_mesh_proxy_patch/resource.tf
  - examples/resources/kong-mesh_mesh_rate_limit/import.sh
  - examples/resources/kong-mesh_mesh_rate_limit/resource.tf
  - examples/resources/kong-mesh_mesh_retry/import.sh
  - examples/resources/kong-mesh_mesh_retry/resource.tf
  - examples/resources/kong-mesh_mesh_service/import.sh
  - examples/resources/kong-mesh_mesh_service/resource.tf
  - examples/resources/kong-mesh_mesh_tcp_route/import.sh
  - examples/resources/kong-mesh_mesh_tcp_route/resource.tf
  - examples/resources/kong-mesh_mesh_timeout/import.sh
  - examples/resources/kong-mesh_mesh_timeout/resource.tf
  - examples/resources/kong-mesh_mesh_tls/import.sh
  - examples/resources/kong-mesh_mesh_tls/resource.tf
  - examples/resources/kong-mesh_mesh_trace/import.sh
  - examples/resources/kong-mesh_mesh_trace/resource.tf
  - examples/resources/kong-mesh_mesh_traffic_permission/import.sh
  - examples/resources/kong-mesh_mesh_traffic_permission/resource.tf
  - go.mod
  - go.sum
  - internal/planmodifiers/boolplanmodifier/suppress_diff.go
  - internal/planmodifiers/float32planmodifier/suppress_diff.go
  - internal/planmodifiers/float64planmodifier/suppress_diff.go
  - internal/planmodifiers/int32planmodifier/suppress_diff.go
  - internal/planmodifiers/int64planmodifier/suppress_diff.go
  - internal/planmodifiers/listplanmodifier/suppress_diff.go
  - internal/planmodifiers/mapplanmodifier/suppress_diff.go
  - internal/planmodifiers/numberplanmodifier/suppress_diff.go
  - internal/planmodifiers/objectplanmodifier/suppress_diff.go
  - internal/planmodifiers/setplanmodifier/suppress_diff.go
  - internal/planmodifiers/stringplanmodifier/suppress_diff.go
  - internal/planmodifiers/utils/state_check.go
  - internal/provider/hostnamegeneratorlist_data_source.go
  - internal/provider/hostnamegeneratorlist_data_source_sdk.go
  - internal/provider/mesh_data_source.go
  - internal/provider/mesh_data_source_sdk.go
  - internal/provider/mesh_resource.go
  - internal/provider/mesh_resource_sdk.go
  - internal/provider/meshaccesslog_data_source.go
  - internal/provider/meshaccesslog_data_source_sdk.go
  - internal/provider/meshaccesslog_resource.go
  - internal/provider/meshaccesslog_resource_sdk.go
  - internal/provider/meshaccessloglist_data_source.go
  - internal/provider/meshaccessloglist_data_source_sdk.go
  - internal/provider/meshcircuitbreaker_data_source.go
  - internal/provider/meshcircuitbreaker_data_source_sdk.go
  - internal/provider/meshcircuitbreaker_resource.go
  - internal/provider/meshcircuitbreaker_resource_sdk.go
  - internal/provider/meshcircuitbreakerlist_data_source.go
  - internal/provider/meshcircuitbreakerlist_data_source_sdk.go
  - internal/provider/meshexternalservice_data_source.go
  - internal/provider/meshexternalservice_data_source_sdk.go
  - internal/provider/meshexternalservice_resource.go
  - internal/provider/meshexternalservice_resource_sdk.go
  - internal/provider/meshexternalservicelist_data_source.go
  - internal/provider/meshexternalservicelist_data_source_sdk.go
  - internal/provider/meshfaultinjection_data_source.go
  - internal/provider/meshfaultinjection_data_source_sdk.go
  - internal/provider/meshfaultinjection_resource.go
  - internal/provider/meshfaultinjection_resource_sdk.go
  - internal/provider/meshfaultinjectionlist_data_source.go
  - internal/provider/meshfaultinjectionlist_data_source_sdk.go
  - internal/provider/meshgateway_data_source.go
  - internal/provider/meshgateway_data_source_sdk.go
  - internal/provider/meshgateway_resource.go
  - internal/provider/meshgateway_resource_sdk.go
  - internal/provider/meshgatewaylist_data_source.go
  - internal/provider/meshgatewaylist_data_source_sdk.go
  - internal/provider/meshglobalratelimit_data_source.go
  - internal/provider/meshglobalratelimit_data_source_sdk.go
  - internal/provider/meshglobalratelimit_resource.go
  - internal/provider/meshglobalratelimit_resource_sdk.go
  - internal/provider/meshglobalratelimitlist_data_source.go
  - internal/provider/meshglobalratelimitlist_data_source_sdk.go
  - internal/provider/meshhealthcheck_data_source.go
  - internal/provider/meshhealthcheck_data_source_sdk.go
  - internal/provider/meshhealthcheck_resource.go
  - internal/provider/meshhealthcheck_resource_sdk.go
  - internal/provider/meshhealthchecklist_data_source.go
  - internal/provider/meshhealthchecklist_data_source_sdk.go
  - internal/provider/meshhostnamegenerator_data_source.go
  - internal/provider/meshhostnamegenerator_data_source_sdk.go
  - internal/provider/meshhostnamegenerator_resource.go
  - internal/provider/meshhostnamegenerator_resource_sdk.go
  - internal/provider/meshhttproute_data_source.go
  - internal/provider/meshhttproute_data_source_sdk.go
  - internal/provider/meshhttproute_resource.go
  - internal/provider/meshhttproute_resource_sdk.go
  - internal/provider/meshhttproutelist_data_source.go
  - internal/provider/meshhttproutelist_data_source_sdk.go
  - internal/provider/meshlist_data_source.go
  - internal/provider/meshlist_data_source_sdk.go
  - internal/provider/meshloadbalancingstrategy_data_source.go
  - internal/provider/meshloadbalancingstrategy_data_source_sdk.go
  - internal/provider/meshloadbalancingstrategy_resource.go
  - internal/provider/meshloadbalancingstrategy_resource_sdk.go
  - internal/provider/meshloadbalancingstrategylist_data_source.go
  - internal/provider/meshloadbalancingstrategylist_data_source_sdk.go
  - internal/provider/meshmetric_data_source.go
  - internal/provider/meshmetric_data_source_sdk.go
  - internal/provider/meshmetric_resource.go
  - internal/provider/meshmetric_resource_sdk.go
  - internal/provider/meshmetriclist_data_source.go
  - internal/provider/meshmetriclist_data_source_sdk.go
  - internal/provider/meshmultizoneservice_data_source.go
  - internal/provider/meshmultizoneservice_data_source_sdk.go
  - internal/provider/meshmultizoneservice_resource.go
  - internal/provider/meshmultizoneservice_resource_sdk.go
  - internal/provider/meshmultizoneservicelist_data_source.go
  - internal/provider/meshmultizoneservicelist_data_source_sdk.go
  - internal/provider/meshopa_data_source.go
  - internal/provider/meshopa_data_source_sdk.go
  - internal/provider/meshopa_resource.go
  - internal/provider/meshopa_resource_sdk.go
  - internal/provider/meshopalist_data_source.go
  - internal/provider/meshopalist_data_source_sdk.go
  - internal/provider/meshpassthrough_data_source.go
  - internal/provider/meshpassthrough_data_source_sdk.go
  - internal/provider/meshpassthrough_resource.go
  - internal/provider/meshpassthrough_resource_sdk.go
  - internal/provider/meshpassthroughlist_data_source.go
  - internal/provider/meshpassthroughlist_data_source_sdk.go
  - internal/provider/meshproxypatch_data_source.go
  - internal/provider/meshproxypatch_data_source_sdk.go
  - internal/provider/meshproxypatch_resource.go
  - internal/provider/meshproxypatch_resource_sdk.go
  - internal/provider/meshproxypatchlist_data_source.go
  - internal/provider/meshproxypatchlist_data_source_sdk.go
  - internal/provider/meshratelimit_data_source.go
  - internal/provider/meshratelimit_data_source_sdk.go
  - internal/provider/meshratelimit_resource.go
  - internal/provider/meshratelimit_resource_sdk.go
  - internal/provider/meshratelimitlist_data_source.go
  - internal/provider/meshratelimitlist_data_source_sdk.go
  - internal/provider/meshretry_data_source.go
  - internal/provider/meshretry_data_source_sdk.go
  - internal/provider/meshretry_resource.go
  - internal/provider/meshretry_resource_sdk.go
  - internal/provider/meshretrylist_data_source.go
  - internal/provider/meshretrylist_data_source_sdk.go
  - internal/provider/meshservice_data_source.go
  - internal/provider/meshservice_data_source_sdk.go
  - internal/provider/meshservice_resource.go
  - internal/provider/meshservice_resource_sdk.go
  - internal/provider/meshservicelist_data_source.go
  - internal/provider/meshservicelist_data_source_sdk.go
  - internal/provider/meshtcproute_data_source.go
  - internal/provider/meshtcproute_data_source_sdk.go
  - internal/provider/meshtcproute_resource.go
  - internal/provider/meshtcproute_resource_sdk.go
  - internal/provider/meshtcproutelist_data_source.go
  - internal/provider/meshtcproutelist_data_source_sdk.go
  - internal/provider/meshtimeout_data_source.go
  - internal/provider/meshtimeout_data_source_sdk.go
  - internal/provider/meshtimeout_resource.go
  - internal/provider/meshtimeout_resource_sdk.go
  - internal/provider/meshtimeoutlist_data_source.go
  - internal/provider/meshtimeoutlist_data_source_sdk.go
  - internal/provider/meshtls_data_source.go
  - internal/provider/meshtls_data_source_sdk.go
  - internal/provider/meshtls_resource.go
  - internal/provider/meshtls_resource_sdk.go
  - internal/provider/meshtlslist_data_source.go
  - internal/provider/meshtlslist_data_source_sdk.go
  - internal/provider/meshtrace_data_source.go
  - internal/provider/meshtrace_data_source_sdk.go
  - internal/provider/meshtrace_resource.go
  - internal/provider/meshtrace_resource_sdk.go
  - internal/provider/meshtracelist_data_source.go
  - internal/provider/meshtracelist_data_source_sdk.go
  - internal/provider/meshtrafficpermission_data_source.go
  - internal/provider/meshtrafficpermission_data_source_sdk.go
  - internal/provider/meshtrafficpermission_resource.go
  - internal/provider/meshtrafficpermission_resource_sdk.go
  - internal/provider/meshtrafficpermissionlist_data_source.go
  - internal/provider/meshtrafficpermissionlist_data_source_sdk.go
  - internal/provider/provider.go
  - internal/provider/reflect/diags.go
  - internal/provider/reflect/doc.go
  - internal/provider/reflect/generic_attr_value.go
  - internal/provider/reflect/helpers.go
  - internal/provider/reflect/interfaces.go
  - internal/provider/reflect/into.go
  - internal/provider/reflect/map.go
  - internal/provider/reflect/number.go
  - internal/provider/reflect/options.go
  - internal/provider/reflect/outof.go
  - internal/provider/reflect/pointer.go
  - internal/provider/reflect/primitive.go
  - internal/provider/reflect/slice.go
  - internal/provider/reflect/struct.go
  - internal/provider/typeconvert/date.go
  - internal/provider/typeconvert/datetime.go
  - internal/provider/typeconvert/int.go
  - internal/provider/types/abort.go
  - internal/provider/types/access_key.go
  - internal/provider/types/acm_certificate_authority_config.go
  - internal/provider/types/addresses.go
  - internal/provider/types/affinity_tags.go
  - internal/provider/types/append_match.go
  - internal/provider/types/append_modifications.go
  - internal/provider/types/append_policies.go
  - internal/provider/types/applications.go
  - internal/provider/types/auth.go
  - internal/provider/types/auth_config.go
  - internal/provider/types/aws_credentials.go
  - internal/provider/types/back_off.go
  - internal/provider/types/backend.go
  - internal/provider/types/backend_refs.go
  - internal/provider/types/backends.go
  - internal/provider/types/builtin_certificate_authority_config.go
  - internal/provider/types/builtin_certificate_authority_config_conf_ca_cert.go
  - internal/provider/types/ca_cert.go
  - internal/provider/types/cert.go
  - internal/provider/types/cert_manager_certificate_authority_config.go
  - internal/provider/types/cluster.go
  - internal/provider/types/conditions.go
  - internal/provider/types/conf.go
  - internal/provider/types/connection.go
  - internal/provider/types/connection_limits.go
  - internal/provider/types/constraints.go
  - internal/provider/types/cookie.go
  - internal/provider/types/cross_zone.go
  - internal/provider/types/data_source_file.go
  - internal/provider/types/data_source_inline.go
  - internal/provider/types/data_source_inline_string.go
  - internal/provider/types/data_source_secret.go
  - internal/provider/types/datadog.go
  - internal/provider/types/datadog_tracing_backend_config.go
  - internal/provider/types/dataplane_proxies.go
  - internal/provider/types/dataplane_proxy.go
  - internal/provider/types/dataplane_ref.go
  - internal/provider/types/default.go
  - internal/provider/types/delay.go
  - internal/provider/types/detectors.go
  - internal/provider/types/dp_cert.go
  - internal/provider/types/exclude.go
  - internal/provider/types/failover.go
  - internal/provider/types/failover_threshold.go
  - internal/provider/types/failure_percentage.go
  - internal/provider/types/file.go
  - internal/provider/types/file_logging_backend_config.go
  - internal/provider/types/filter_state.go
  - internal/provider/types/filters.go
  - internal/provider/types/format.go
  - internal/provider/types/from.go
  - internal/provider/types/gateway_failures.go
  - internal/provider/types/grpc.go
  - internal/provider/types/hash_policies.go
  - internal/provider/types/header.go
  - internal/provider/types/headers.go
  - internal/provider/types/host_selection.go
  - internal/provider/types/hostname_generator_item.go
  - internal/provider/types/hostname_generator_item_spec.go
  - internal/provider/types/hostname_generator_ref.go
  - internal/provider/types/hostname_generators.go
  - internal/provider/types/http.go
  - internal/provider/types/http_filter.go
  - internal/provider/types/issuer_ref.go
  - internal/provider/types/json.go
  - internal/provider/types/json_patches.go
  - internal/provider/types/least_request.go
  - internal/provider/types/listener.go
  - internal/provider/types/listeners.go
  - internal/provider/types/load_balancer.go
  - internal/provider/types/local.go
  - internal/provider/types/local_zone.go
  - internal/provider/types/locality_awareness.go
  - internal/provider/types/logging.go
  - internal/provider/types/maglev.go
  - internal/provider/types/matches.go
  - internal/provider/types/mesh_access_log_item.go
  - internal/provider/types/mesh_access_log_item_spec_from_backends.go
  - internal/provider/types/mesh_access_log_item_spec_from_default.go
  - internal/provider/types/mesh_access_log_item_spec_from_open_telemetry.go
  - internal/provider/types/mesh_access_log_item_target_ref.go
  - internal/provider/types/mesh_access_log_item_tcp.go
  - internal/provider/types/mesh_circuit_breaker_item.go
  - internal/provider/types/mesh_circuit_breaker_item_default.go
  - internal/provider/types/mesh_circuit_breaker_item_from.go
  - internal/provider/types/mesh_circuit_breaker_item_rules.go
  - internal/provider/types/mesh_circuit_breaker_item_spec.go
  - internal/provider/types/mesh_external_service.go
  - internal/provider/types/mesh_external_service_item.go
  - internal/provider/types/mesh_external_service_item_endpoints.go
  - internal/provider/types/mesh_external_service_item_extension.go
  - internal/provider/types/mesh_external_service_item_match.go
  - internal/provider/types/mesh_external_service_item_spec.go
  - internal/provider/types/mesh_external_service_item_version.go
  - internal/provider/types/mesh_fault_injection_item.go
  - internal/provider/types/mesh_fault_injection_item_default.go
  - internal/provider/types/mesh_fault_injection_item_from.go
  - internal/provider/types/mesh_fault_injection_item_spec.go
  - internal/provider/types/mesh_gateway_item.go
  - internal/provider/types/mesh_gateway_item_tls.go
  - internal/provider/types/mesh_global_rate_limit_item.go
  - internal/provider/types/mesh_global_rate_limit_item_add.go
  - internal/provider/types/mesh_global_rate_limit_item_default.go
  - internal/provider/types/mesh_global_rate_limit_item_from.go
  - internal/provider/types/mesh_global_rate_limit_item_headers.go
  - internal/provider/types/mesh_global_rate_limit_item_http.go
  - internal/provider/types/mesh_global_rate_limit_item_limits.go
  - internal/provider/types/mesh_global_rate_limit_item_spec.go
  - internal/provider/types/mesh_global_rate_limit_item_spec_from_request_rate.go
  - internal/provider/types/mesh_health_check_item.go
  - internal/provider/types/mesh_health_check_item_default.go
  - internal/provider/types/mesh_health_check_item_http.go
  - internal/provider/types/mesh_health_check_item_spec.go
  - internal/provider/types/mesh_health_check_item_to.go
  - internal/provider/types/mesh_http_route_item.go
  - internal/provider/types/mesh_http_route_item_default.go
  - internal/provider/types/mesh_http_route_item_rules.go
  - internal/provider/types/mesh_http_route_item_spec.go
  - internal/provider/types/mesh_http_route_item_spec_path.go
  - internal/provider/types/mesh_http_route_item_to.go
  - internal/provider/types/mesh_item.go
  - internal/provider/types/mesh_item_backends.go
  - internal/provider/types/mesh_item_conf.go
  - internal/provider/types/mesh_item_conf_prometheus_metrics_backend_config.go
  - internal/provider/types/mesh_item_metrics.go
  - internal/provider/types/mesh_item_metrics_conf.go
  - internal/provider/types/mesh_item_mtls_backends.go
  - internal/provider/types/mesh_item_mtls_conf.go
  - internal/provider/types/mesh_item_networking.go
  - internal/provider/types/mesh_item_outbound.go
  - internal/provider/types/mesh_item_tracing_backends.go
  - internal/provider/types/mesh_item_tracing_conf.go
  - internal/provider/types/mesh_load_balancing_strategy_item.go
  - internal/provider/types/mesh_load_balancing_strategy_item_default.go
  - internal/provider/types/mesh_load_balancing_strategy_item_from.go
  - internal/provider/types/mesh_load_balancing_strategy_item_spec.go
  - internal/provider/types/mesh_load_balancing_strategy_item_spec_header.go
  - internal/provider/types/mesh_load_balancing_strategy_item_spec_to.go
  - internal/provider/types/mesh_load_balancing_strategy_item_to.go
  - internal/provider/types/mesh_metric_item.go
  - internal/provider/types/mesh_metric_item_backends.go
  - internal/provider/types/mesh_metric_item_spec.go
  - internal/provider/types/mesh_metric_item_tls.go
  - internal/provider/types/mesh_multi_zone_service_item.go
  - internal/provider/types/mesh_multi_zone_service_item_mesh_service.go
  - internal/provider/types/mesh_multi_zone_service_item_mesh_services.go
  - internal/provider/types/mesh_multi_zone_service_item_selector.go
  - internal/provider/types/mesh_multi_zone_service_item_spec.go
  - internal/provider/types/mesh_multi_zone_service_item_status.go
  - internal/provider/types/mesh_opa_item.go
  - internal/provider/types/mesh_opa_item_default.go
  - internal/provider/types/mesh_opa_item_spec.go
  - internal/provider/types/mesh_passthrough_item.go
  - internal/provider/types/mesh_passthrough_item_default.go
  - internal/provider/types/mesh_passthrough_item_spec.go
  - internal/provider/types/mesh_proxy_patch_item.go
  - internal/provider/types/mesh_proxy_patch_item_default.go
  - internal/provider/types/mesh_proxy_patch_item_match.go
  - internal/provider/types/mesh_proxy_patch_item_spec.go
  - internal/provider/types/mesh_proxy_patch_item_spec_default_append_modifications_virtual_host_match.go
  - internal/provider/types/mesh_proxy_patch_item_spec_default_match.go
  - internal/provider/types/mesh_proxy_patch_item_spec_match.go
  - internal/provider/types/mesh_rate_limit_item.go
  - internal/provider/types/mesh_rate_limit_item_default.go
  - internal/provider/types/mesh_rate_limit_item_from.go
  - internal/provider/types/mesh_rate_limit_item_http.go
  - internal/provider/types/mesh_rate_limit_item_rules.go
  - internal/provider/types/mesh_rate_limit_item_spec.go
  - internal/provider/types/mesh_rate_limit_item_tcp.go
  - internal/provider/types/mesh_retry_item.go
  - internal/provider/types/mesh_retry_item_default.go
  - internal/provider/types/mesh_retry_item_grpc.go
  - internal/provider/types/mesh_retry_item_http.go
  - internal/provider/types/mesh_retry_item_spec.go
  - internal/provider/types/mesh_retry_item_tcp.go
  - internal/provider/types/mesh_retry_item_to.go
  - internal/provider/types/mesh_service_item.go
  - internal/provider/types/mesh_service_item_ports.go
  - internal/provider/types/mesh_service_item_selector.go
  - internal/provider/types/mesh_service_item_spec.go
  - internal/provider/types/mesh_service_item_status.go
  - internal/provider/types/mesh_service_item_tls.go
  - internal/provider/types/mesh_services.go
  - internal/provider/types/mesh_tcp_route_item.go
  - internal/provider/types/mesh_tcp_route_item_default.go
  - internal/provider/types/mesh_tcp_route_item_rules.go
  - internal/provider/types/mesh_tcp_route_item_spec.go
  - internal/provider/types/mesh_tcp_route_item_to.go
  - internal/provider/types/mesh_timeout_item.go
  - internal/provider/types/mesh_timeout_item_default.go
  - internal/provider/types/mesh_timeout_item_from.go
  - internal/provider/types/mesh_timeout_item_http.go
  - internal/provider/types/mesh_timeout_item_rules.go
  - internal/provider/types/mesh_timeout_item_spec.go
  - internal/provider/types/mesh_tls_item.go
  - internal/provider/types/mesh_tls_item_default.go
  - internal/provider/types/mesh_tls_item_from.go
  - internal/provider/types/mesh_tls_item_rules.go
  - internal/provider/types/mesh_tls_item_spec.go
  - internal/provider/types/mesh_trace_item.go
  - internal/provider/types/mesh_trace_item_backends.go
  - internal/provider/types/mesh_trace_item_default.go
  - internal/provider/types/mesh_trace_item_open_telemetry.go
  - internal/provider/types/mesh_trace_item_spec.go
  - internal/provider/types/mesh_traffic_permission_item.go
  - internal/provider/types/mesh_traffic_permission_item_default.go
  - internal/provider/types/mesh_traffic_permission_item_from.go
  - internal/provider/types/mesh_traffic_permission_item_spec.go
  - internal/provider/types/mode.go
  - internal/provider/types/mtls.go
  - internal/provider/types/on_rate_limit.go
  - internal/provider/types/open_telemetry.go
  - internal/provider/types/options_obj.go
  - internal/provider/types/outlier_detection.go
  - internal/provider/types/path.go
  - internal/provider/types/ports.go
  - internal/provider/types/profiles.go
  - internal/provider/types/prometheus.go
  - internal/provider/types/prometheus_metrics_backend_config_conf_aggregate.go
  - internal/provider/types/prometheus_metrics_backend_config_conf_mesh_item_envoy.go
  - internal/provider/types/provided_certificate_authority_config.go
  - internal/provider/types/query_params.go
  - internal/provider/types/rate_limit_service.go
  - internal/provider/types/rate_limited_back_off.go
  - internal/provider/types/ratelimit_on_request.go
  - internal/provider/types/request_body.go
  - internal/provider/types/request_header_modifier.go
  - internal/provider/types/request_mirror.go
  - internal/provider/types/request_redirect.go
  - internal/provider/types/request_timeout.go
  - internal/provider/types/requirements.go
  - internal/provider/types/reset_headers.go
  - internal/provider/types/resources.go
  - internal/provider/types/response_bandwidth.go
  - internal/provider/types/ring_hash.go
  - internal/provider/types/root_chain.go
  - internal/provider/types/rotation.go
  - internal/provider/types/routing.go
  - internal/provider/types/rules.go
  - internal/provider/types/sampling.go
  - internal/provider/types/selector.go
  - internal/provider/types/selectors.go
  - internal/provider/types/sidecar.go
  - internal/provider/types/spec.go
  - internal/provider/types/status.go
  - internal/provider/types/subject_alt_names.go
  - internal/provider/types/success_rate.go
  - internal/provider/types/tags.go
  - internal/provider/types/tcp.go
  - internal/provider/types/tcp_logging_backend_config.go
  - internal/provider/types/tls.go
  - internal/provider/types/tracing.go
  - internal/provider/types/url_rewrite.go
  - internal/provider/types/vault_certificate_authority_config.go
  - internal/provider/types/verification.go
  - internal/provider/types/vip.go
  - internal/provider/types/virtual_host.go
  - internal/provider/types/zipkin.go
  - internal/provider/types/zipkin_tracing_backend_config.go
  - internal/provider/utils.go
  - internal/sdk/.gitattributes
  - internal/sdk/dataplane.go
  - internal/sdk/docs/models/operations/option.md
  - internal/sdk/globalinsight.go
  - internal/sdk/hostnamegenerator.go
  - internal/sdk/inspect.go
  - internal/sdk/internal/config/sdkconfiguration.go
  - internal/sdk/internal/hooks/hooks.go
  - internal/sdk/internal/utils/contenttype.go
  - internal/sdk/internal/utils/env.go
  - internal/sdk/internal/utils/form.go
  - internal/sdk/internal/utils/headers.go
  - internal/sdk/internal/utils/json.go
  - internal/sdk/internal/utils/pathparams.go
  - internal/sdk/internal/utils/queryparams.go
  - internal/sdk/internal/utils/requestbody.go
  - internal/sdk/internal/utils/retries.go
  - internal/sdk/internal/utils/security.go
  - internal/sdk/internal/utils/utils.go
  - internal/sdk/kongmesh.go
  - internal/sdk/mesh.go
  - internal/sdk/meshaccesslog.go
  - internal/sdk/meshcircuitbreaker.go
  - internal/sdk/meshexternalservice.go
  - internal/sdk/meshfaultinjection.go
  - internal/sdk/meshgateway.go
  - internal/sdk/meshglobalratelimit.go
  - internal/sdk/meshhealthcheck.go
  - internal/sdk/meshhttproute.go
  - internal/sdk/meshloadbalancingstrategy.go
  - internal/sdk/meshmetric.go
  - internal/sdk/meshmultizoneservice.go
  - internal/sdk/meshopa.go
  - internal/sdk/meshpassthrough.go
  - internal/sdk/meshproxypatch.go
  - internal/sdk/meshratelimit.go
  - internal/sdk/meshretry.go
  - internal/sdk/meshservice.go
  - internal/sdk/meshtcproute.go
  - internal/sdk/meshtimeout.go
  - internal/sdk/meshtls.go
  - internal/sdk/meshtrace.go
  - internal/sdk/meshtrafficpermission.go
  - internal/sdk/models/errors/sdkerror.go
  - internal/sdk/models/operations/createhostnamegenerator.go
  - internal/sdk/models/operations/createmeshaccesslog.go
  - internal/sdk/models/operations/createmeshcircuitbreaker.go
  - internal/sdk/models/operations/createmeshexternalservice.go
  - internal/sdk/models/operations/createmeshfaultinjection.go
  - internal/sdk/models/operations/createmeshgateway.go
  - internal/sdk/models/operations/createmeshglobalratelimit.go
  - internal/sdk/models/operations/createmeshhealthcheck.go
  - internal/sdk/models/operations/createmeshhttproute.go
  - internal/sdk/models/operations/createmeshloadbalancingstrategy.go
  - internal/sdk/models/operations/createmeshmetric.go
  - internal/sdk/models/operations/createmeshmultizoneservice.go
  - internal/sdk/models/operations/createmeshopa.go
  - internal/sdk/models/operations/createmeshpassthrough.go
  - internal/sdk/models/operations/createmeshproxypatch.go
  - internal/sdk/models/operations/createmeshratelimit.go
  - internal/sdk/models/operations/createmeshretry.go
  - internal/sdk/models/operations/createmeshservice.go
  - internal/sdk/models/operations/createmeshtcproute.go
  - internal/sdk/models/operations/createmeshtimeout.go
  - internal/sdk/models/operations/createmeshtls.go
  - internal/sdk/models/operations/createmeshtrace.go
  - internal/sdk/models/operations/createmeshtrafficpermission.go
  - internal/sdk/models/operations/createtenant.go
  - internal/sdk/models/operations/deletedataplane.go
  - internal/sdk/models/operations/deletehostnamegenerator.go
  - internal/sdk/models/operations/deletemesh.go
  - internal/sdk/models/operations/deletemeshaccesslog.go
  - internal/sdk/models/operations/deletemeshcircuitbreaker.go
  - internal/sdk/models/operations/deletemeshexternalservice.go
  - internal/sdk/models/operations/deletemeshfaultinjection.go
  - internal/sdk/models/operations/deletemeshgateway.go
  - internal/sdk/models/operations/deletemeshglobalratelimit.go
  - internal/sdk/models/operations/deletemeshhealthcheck.go
  - internal/sdk/models/operations/deletemeshhttproute.go
  - internal/sdk/models/operations/deletemeshloadbalancingstrategy.go
  - internal/sdk/models/operations/deletemeshmetric.go
  - internal/sdk/models/operations/deletemeshmultizoneservice.go
  - internal/sdk/models/operations/deletemeshopa.go
  - internal/sdk/models/operations/deletemeshpassthrough.go
  - internal/sdk/models/operations/deletemeshproxypatch.go
  - internal/sdk/models/operations/deletemeshratelimit.go
  - internal/sdk/models/operations/deletemeshretry.go
  - internal/sdk/models/operations/deletemeshservice.go
  - internal/sdk/models/operations/deletemeshtcproute.go
  - internal/sdk/models/operations/deletemeshtimeout.go
  - internal/sdk/models/operations/deletemeshtls.go
  - internal/sdk/models/operations/deletemeshtrace.go
  - internal/sdk/models/operations/deletemeshtrafficpermission.go
  - internal/sdk/models/operations/getdataplane.go
  - internal/sdk/models/operations/getdataplanelist.go
  - internal/sdk/models/operations/getdataplaneoverview.go
  - internal/sdk/models/operations/getdataplaneoverviewlist.go
  - internal/sdk/models/operations/getdataplanesxdsconfig.go
  - internal/sdk/models/operations/getglobalinsight.go
  - internal/sdk/models/operations/gethostnamegenerator.go
  - internal/sdk/models/operations/gethostnamegeneratorlist.go
  - internal/sdk/models/operations/getmesh.go
  - internal/sdk/models/operations/getmeshaccesslog.go
  - internal/sdk/models/operations/getmeshaccessloglist.go
  - internal/sdk/models/operations/getmeshcircuitbreaker.go
  - internal/sdk/models/operations/getmeshcircuitbreakerlist.go
  - internal/sdk/models/operations/getmeshexternalservice.go
  - internal/sdk/models/operations/getmeshexternalservicelist.go
  - internal/sdk/models/operations/getmeshfaultinjection.go
  - internal/sdk/models/operations/getmeshfaultinjectionlist.go
  - internal/sdk/models/operations/getmeshgateway.go
  - internal/sdk/models/operations/getmeshgatewaylist.go
  - internal/sdk/models/operations/getmeshglobalratelimit.go
  - internal/sdk/models/operations/getmeshglobalratelimitlist.go
  - internal/sdk/models/operations/getmeshhealthcheck.go
  - internal/sdk/models/operations/getmeshhealthchecklist.go
  - internal/sdk/models/operations/getmeshhttproute.go
  - internal/sdk/models/operations/getmeshhttproutelist.go
  - internal/sdk/models/operations/getmeshlist.go
  - internal/sdk/models/operations/getmeshloadbalancingstrategy.go
  - internal/sdk/models/operations/getmeshloadbalancingstrategylist.go
  - internal/sdk/models/operations/getmeshmetric.go
  - internal/sdk/models/operations/getmeshmetriclist.go
  - internal/sdk/models/operations/getmeshmultizoneservice.go
  - internal/sdk/models/operations/getmeshmultizoneservicelist.go
  - internal/sdk/models/operations/getmeshopa.go
  - internal/sdk/models/operations/getmeshopalist.go
  - internal/sdk/models/operations/getmeshpassthrough.go
  - internal/sdk/models/operations/getmeshpassthroughlist.go
  - internal/sdk/models/operations/getmeshproxypatch.go
  - internal/sdk/models/operations/getmeshproxypatchlist.go
  - internal/sdk/models/operations/getmeshratelimit.go
  - internal/sdk/models/operations/getmeshratelimitlist.go
  - internal/sdk/models/operations/getmeshretry.go
  - internal/sdk/models/operations/getmeshretrylist.go
  - internal/sdk/models/operations/getmeshservice.go
  - internal/sdk/models/operations/getmeshservicelist.go
  - internal/sdk/models/operations/getmeshtcproute.go
  - internal/sdk/models/operations/getmeshtcproutelist.go
  - internal/sdk/models/operations/getmeshtimeout.go
  - internal/sdk/models/operations/getmeshtimeoutlist.go
  - internal/sdk/models/operations/getmeshtls.go
  - internal/sdk/models/operations/getmeshtlslist.go
  - internal/sdk/models/operations/getmeshtrace.go
  - internal/sdk/models/operations/getmeshtracelist.go
  - internal/sdk/models/operations/getmeshtrafficpermission.go
  - internal/sdk/models/operations/getmeshtrafficpermissionlist.go
  - internal/sdk/models/operations/getresourcetypedescription.go
  - internal/sdk/models/operations/index.go
  - internal/sdk/models/operations/inspectdataplanesrules.go
  - internal/sdk/models/operations/inspecthostnames.go
  - internal/sdk/models/operations/inspectresources.go
  - internal/sdk/models/operations/options.go
  - internal/sdk/models/operations/putdataplane.go
  - internal/sdk/models/operations/putmesh.go
  - internal/sdk/models/operations/updatehostnamegenerator.go
  - internal/sdk/models/operations/updatemeshaccesslog.go
  - internal/sdk/models/operations/updatemeshcircuitbreaker.go
  - internal/sdk/models/operations/updatemeshexternalservice.go
  - internal/sdk/models/operations/updatemeshfaultinjection.go
  - internal/sdk/models/operations/updatemeshgateway.go
  - internal/sdk/models/operations/updatemeshglobalratelimit.go
  - internal/sdk/models/operations/updatemeshhealthcheck.go
  - internal/sdk/models/operations/updatemeshhttproute.go
  - internal/sdk/models/operations/updatemeshloadbalancingstrategy.go
  - internal/sdk/models/operations/updatemeshmetric.go
  - internal/sdk/models/operations/updatemeshmultizoneservice.go
  - internal/sdk/models/operations/updatemeshopa.go
  - internal/sdk/models/operations/updatemeshpassthrough.go
  - internal/sdk/models/operations/updatemeshproxypatch.go
  - internal/sdk/models/operations/updatemeshratelimit.go
  - internal/sdk/models/operations/updatemeshretry.go
  - internal/sdk/models/operations/updatemeshservice.go
  - internal/sdk/models/operations/updatemeshtcproute.go
  - internal/sdk/models/operations/updatemeshtimeout.go
  - internal/sdk/models/operations/updatemeshtls.go
  - internal/sdk/models/operations/updatemeshtrace.go
  - internal/sdk/models/operations/updatemeshtrafficpermission.go
  - internal/sdk/models/shared/badrequesterror.go
  - internal/sdk/models/shared/baseerror.go
  - internal/sdk/models/shared/dataplanecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/dataplanedeletesuccessresponse.go
  - internal/sdk/models/shared/dataplaneitem.go
  - internal/sdk/models/shared/dataplanelist.go
  - internal/sdk/models/shared/dataplaneoverviewwithmeta.go
  - internal/sdk/models/shared/dataplanexdsconfig.go
  - internal/sdk/models/shared/datasourcefile.go
  - internal/sdk/models/shared/datasourceinline.go
  - internal/sdk/models/shared/datasourceinlinestring.go
  - internal/sdk/models/shared/datasourcesecret.go
  - internal/sdk/models/shared/fromrule.go
  - internal/sdk/models/shared/getdataplaneoverviewlistresponse.go
  - internal/sdk/models/shared/globalinsight.go
  - internal/sdk/models/shared/hostnamegeneratorcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/hostnamegeneratordeletesuccessresponse.go
  - internal/sdk/models/shared/hostnamegeneratoritem.go
  - internal/sdk/models/shared/hostnamegeneratorlist.go
  - internal/sdk/models/shared/httpmatch.go
  - internal/sdk/models/shared/inbound.go
  - internal/sdk/models/shared/inboundrule.go
  - internal/sdk/models/shared/inboundrulesentry.go
  - internal/sdk/models/shared/index.go
  - internal/sdk/models/shared/inspectdataplanesforpolicy.go
  - internal/sdk/models/shared/inspecthostname.go
  - internal/sdk/models/shared/inspecthostnames.go
  - internal/sdk/models/shared/inspecthostnamezone.go
  - internal/sdk/models/shared/inspectrule.go
  - internal/sdk/models/shared/inspectrules.go
  - internal/sdk/models/shared/invalidparameterchoiceitem.go
  - internal/sdk/models/shared/invalidparameterdependentitem.go
  - internal/sdk/models/shared/invalidparametermaximumlength.go
  - internal/sdk/models/shared/invalidparameterminimumlength.go
  - internal/sdk/models/shared/invalidparameters.go
  - internal/sdk/models/shared/invalidparameterstandard.go
  - internal/sdk/models/shared/invalidrules.go
  - internal/sdk/models/shared/jsonpatchitem.go
  - internal/sdk/models/shared/limits.go
  - internal/sdk/models/shared/meshaccesslogcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshaccesslogdeletesuccessresponse.go
  - internal/sdk/models/shared/meshaccesslogitem.go
  - internal/sdk/models/shared/meshaccessloglist.go
  - internal/sdk/models/shared/meshcircuitbreakercreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshcircuitbreakerdeletesuccessresponse.go
  - internal/sdk/models/shared/meshcircuitbreakeritem.go
  - internal/sdk/models/shared/meshcircuitbreakerlist.go
  - internal/sdk/models/shared/meshcontrolplanefeature.go
  - internal/sdk/models/shared/meshcontrolplanefeaturehostnamegenerationcreation.go
  - internal/sdk/models/shared/meshcontrolplanefeaturemeshcreation.go
  - internal/sdk/models/shared/meshcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshdeletesuccessresponse.go
  - internal/sdk/models/shared/meshexternalservicecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshexternalservicedeletesuccessresponse.go
  - internal/sdk/models/shared/meshexternalserviceitem.go
  - internal/sdk/models/shared/meshexternalservicelist.go
  - internal/sdk/models/shared/meshfaultinjectioncreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshfaultinjectiondeletesuccessresponse.go
  - internal/sdk/models/shared/meshfaultinjectionitem.go
  - internal/sdk/models/shared/meshfaultinjectionlist.go
  - internal/sdk/models/shared/meshgatewaycreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshgatewaydeletesuccessresponse.go
  - internal/sdk/models/shared/meshgatewayitem.go
  - internal/sdk/models/shared/meshgatewaylist.go
  - internal/sdk/models/shared/meshglobalratelimitcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshglobalratelimitdeletesuccessresponse.go
  - internal/sdk/models/shared/meshglobalratelimititem.go
  - internal/sdk/models/shared/meshglobalratelimitlist.go
  - internal/sdk/models/shared/meshhealthcheckcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshhealthcheckdeletesuccessresponse.go
  - internal/sdk/models/shared/meshhealthcheckitem.go
  - internal/sdk/models/shared/meshhealthchecklist.go
  - internal/sdk/models/shared/meshhttproutecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshhttproutedeletesuccessresponse.go
  - internal/sdk/models/shared/meshhttprouteitem.go
  - internal/sdk/models/shared/meshhttproutelist.go
  - internal/sdk/models/shared/meshitem.go
  - internal/sdk/models/shared/meshlist.go
  - internal/sdk/models/shared/meshloadbalancingstrategycreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshloadbalancingstrategydeletesuccessresponse.go
  - internal/sdk/models/shared/meshloadbalancingstrategyitem.go
  - internal/sdk/models/shared/meshloadbalancingstrategylist.go
  - internal/sdk/models/shared/meshmetriccreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshmetricdeletesuccessresponse.go
  - internal/sdk/models/shared/meshmetricitem.go
  - internal/sdk/models/shared/meshmetriclist.go
  - internal/sdk/models/shared/meshmultizoneservicecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshmultizoneservicedeletesuccessresponse.go
  - internal/sdk/models/shared/meshmultizoneserviceitem.go
  - internal/sdk/models/shared/meshmultizoneservicelist.go
  - internal/sdk/models/shared/meshopacreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshopadeletesuccessresponse.go
  - internal/sdk/models/shared/meshopaitem.go
  - internal/sdk/models/shared/meshopalist.go
  - internal/sdk/models/shared/meshpassthroughcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshpassthroughdeletesuccessresponse.go
  - internal/sdk/models/shared/meshpassthroughitem.go
  - internal/sdk/models/shared/meshpassthroughlist.go
  - internal/sdk/models/shared/meshproxypatchcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshproxypatchdeletesuccessresponse.go
  - internal/sdk/models/shared/meshproxypatchitem.go
  - internal/sdk/models/shared/meshproxypatchlist.go
  - internal/sdk/models/shared/meshratelimitcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshratelimitdeletesuccessresponse.go
  - internal/sdk/models/shared/meshratelimititem.go
  - internal/sdk/models/shared/meshratelimitlist.go
  - internal/sdk/models/shared/meshretrycreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshretrydeletesuccessresponse.go
  - internal/sdk/models/shared/meshretryitem.go
  - internal/sdk/models/shared/meshretrylist.go
  - internal/sdk/models/shared/meshservicecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshservicedeletesuccessresponse.go
  - internal/sdk/models/shared/meshserviceitem.go
  - internal/sdk/models/shared/meshservicelist.go
  - internal/sdk/models/shared/meshtcproutecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshtcproutedeletesuccessresponse.go
  - internal/sdk/models/shared/meshtcprouteitem.go
  - internal/sdk/models/shared/meshtcproutelist.go
  - internal/sdk/models/shared/meshtimeoutcreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshtimeoutdeletesuccessresponse.go
  - internal/sdk/models/shared/meshtimeoutitem.go
  - internal/sdk/models/shared/meshtimeoutlist.go
  - internal/sdk/models/shared/meshtlscreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshtlsdeletesuccessresponse.go
  - internal/sdk/models/shared/meshtlsitem.go
  - internal/sdk/models/shared/meshtlslist.go
  - internal/sdk/models/shared/meshtracecreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshtracedeletesuccessresponse.go
  - internal/sdk/models/shared/meshtraceitem.go
  - internal/sdk/models/shared/meshtracelist.go
  - internal/sdk/models/shared/meshtrafficpermissioncreateorupdatesuccessresponse.go
  - internal/sdk/models/shared/meshtrafficpermissiondeletesuccessresponse.go
  - internal/sdk/models/shared/meshtrafficpermissionitem.go
  - internal/sdk/models/shared/meshtrafficpermissionlist.go
  - internal/sdk/models/shared/meta.go
  - internal/sdk/models/shared/notfounderror.go
  - internal/sdk/models/shared/policydescription.go
  - internal/sdk/models/shared/provisionmeshcontrolplanerequest.go
  - internal/sdk/models/shared/proxyrule.go
  - internal/sdk/models/shared/resourcerule.go
  - internal/sdk/models/shared/resourceruleorigin.go
  - internal/sdk/models/shared/resourcestats.go
  - internal/sdk/models/shared/resourcetypedescription.go
  - internal/sdk/models/shared/resourcetypedescriptionlist.go
  - internal/sdk/models/shared/rule.go
  - internal/sdk/models/shared/rulematcher.go
  - internal/sdk/models/shared/schemebasicauth.go
  - internal/sdk/models/shared/security.go
  - internal/sdk/retry/config.go
  - internal/sdk/system.go
  - internal/sdk/tenants.go
  - internal/sdk/types/bigint.go
  - internal/sdk/types/date.go
  - internal/sdk/types/datetime.go
  - internal/sdk/types/decimal.go
  - internal/sdk/types/pointers.go
  - internal/validators/DateValidator.go
  - internal/validators/ExactlyOneChild.go
  - internal/validators/JSONParseValidator.go
  - internal/validators/RFC3339Validator.go
  - internal/validators/boolvalidators/not_null.go
  - internal/validators/float32validators/not_null.go
  - internal/validators/float64validators/not_null.go
  - internal/validators/int32validators/not_null.go
  - internal/validators/int64validators/not_null.go
  - internal/validators/listvalidators/not_null.go
  - internal/validators/mapvalidators/not_null.go
  - internal/validators/numbervalidators/not_null.go
  - internal/validators/objectvalidators/not_null.go
  - internal/validators/setvalidators/not_null.go
  - internal/validators/stringvalidators/not_null.go
  - main.go
  - terraform-registry-manifest.json
  - tools/tools.go
examples:
  get-dataplanes-xds-config:
    speakeasy-default-get-dataplanes-xds-config:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
        query:
          shadow: false
      responses:
        "200":
          application/json: {"xds": {}}
        "400":
          application/problem+json: {"status": 471442, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "500":
          application/problem+json: {"status": 747325, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  index:
    speakeasy-default-index:
      responses:
        "200":
          application/json: {"hostname": "slushy-yogurt.com", "product": "Incredible Wooden Keyboard", "version": "<value>", "instanceId": "<id>", "clusterId": "<id>", "gui": "<value>"}
        "400":
          application/problem+json: {"status": 444889, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}]}
        "500":
          application/problem+json: {"status": 190865, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  get-resource-type-description:
    speakeasy-default-get-resource-type-description:
      responses:
        "200":
          application/json: {"resources": [{"name": "<value>", "scope": "Mesh", "readOnly": true, "path": "/usr/obj", "singularDisplayName": "<value>", "pluralDisplayName": "<value>", "includeInFederation": true}]}
        "400":
          application/problem+json: {"status": 168975, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "500":
          application/problem+json: {"status": 345332, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  get-global-insight:
    Single control plane response:
      responses:
        "200":
          application/json: {"createdAt": "2023-01-11T02:30:42.227Z", "services": {"internal": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}, "external": {"total": 1}, "gatewayBuiltin": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}, "gatewayDelegated": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}}, "zones": {"controlPlanes": {"online": 1, "total": 1}, "zoneEgresses": {"online": 1, "total": 1}, "zoneIngresses": {"online": 1, "total": 1}}, "dataplanes": {"standard": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}, "gatewayBuiltin": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}, "gatewayDelegated": {"online": 2, "total": 4, "offline": 1, "partiallyDegraded": 1}}, "policies": {"total": 100}, "meshes": {"total": 3}, "resources": {"MeshTrafficPermission": {"total": 42}, "MeshService": {"total": 84}}, "limits": {"dataplanes": 3, "policies": 50, "zones": 888}}
  inspect-dataplanes-rules:
    "":
      parameters:
        path:
          mesh: "default"
          resourceType: "dataplanes"
          resourceName: "my-dp"
      responses:
        "200":
          application/json: {"resource": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "rules": [{"type": "MeshRetry", "proxyRule": {"conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, "toRules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}], "toResourceRules": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "conf": [{"key": "<value>"}, {"key": "<value>", "key1": "<value>", "key2": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}], "fromRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}], "inboundRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}], "warnings": ["Mesh is not Mtls enabled this policy will have no effect"]}, {"type": "MeshRetry", "proxyRule": {"conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, "toRules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}], "toResourceRules": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "conf": [{"key": "<value>"}, {"key": "<value>", "key1": "<value>", "key2": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}], "fromRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}], "inboundRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}], "warnings": ["Mesh is not Mtls enabled this policy will have no effect"]}, {"type": "MeshRetry", "proxyRule": {"conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, "toRules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}], "toResourceRules": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "conf": [{"key": "<value>"}, {"key": "<value>", "key1": "<value>", "key2": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}], "fromRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, {"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}, {"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}]}], "inboundRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}, {"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 240950}, "rules": [{"conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}, {"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}], "warnings": ["Mesh is not Mtls enabled this policy will have no effect"]}], "httpMatches": [{"hash": "<value>", "match": {}}]}
        "400":
          application/problem+json: {"status": 523112, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "500":
          application/problem+json: {"status": 368786, "title": "<value>", "instance": "<value>", "detail": "<value>"}
    speakeasy-default-inspect-dataplanes-rules:
      parameters:
        path:
          mesh: "default"
          resourceType: "dataplanes"
          resourceName: "my-dp"
      responses:
        "200":
          application/json: {"resource": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "rules": [{"type": "MeshRetry", "proxyRule": {"conf": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}, "toRules": [{"matchers": [{"key": "kuma.io/service", "value": "my-cool-service", "not": false}], "conf": {"key": "<value>", "key1": "<value>"}, "origin": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}], "toResourceRules": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, "conf": [{}, {"key": "<value>", "key1": "<value>"}], "origin": []}], "fromRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 655319}, "rules": []}], "inboundRules": [{"inbound": {"tags": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "port": 655319}, "rules": [{"conf": [], "origin": [{"resourceMeta": {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}}]}]}], "warnings": ["Mesh is not Mtls enabled this policy will have no effect"]}], "httpMatches": [{"hash": "<value>", "match": {}}]}
        "400":
          application/problem+json: {"status": 653914, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "500":
          application/problem+json: {"status": 560239, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  inspect-resources:
    "":
      parameters:
        path:
          mesh: "default"
          policyType: "meshretries"
          policyName: "retry-all"
      responses:
        "200":
          application/json: {"total": 200, "items": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}
        "400":
          application/problem+json: {"status": 162739, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "500":
          application/problem+json: {"status": 847705, "title": "<value>", "instance": "<value>", "detail": "<value>"}
    ResponseForDataplane:
      parameters:
        path:
          mesh: "default"
          policyType: "meshretries"
          policyName: "retry-all"
      responses:
        "200":
          application/json: {"total": 100, "next": "http://localhost:5681/meshes/default/meshretries/_resources/dataplanes?offset=100", "items": [{"type": "Dataplane", "mesh": "default", "name": "dp-1", "labels": {"k8s.kuma.io/namespace": "kuma-system"}}, {"type": "Dataplane", "mesh": "default", "name": "dp-2", "labels": {"k8s.kuma.io/namespace": "kuma-system"}}]}
    speakeasy-default-inspect-resources:
      parameters:
        path:
          mesh: "default"
          policyType: "meshretries"
          policyName: "retry-all"
      responses:
        "200":
          application/json: {"total": 200, "items": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}
        "400":
          application/problem+json: {"status": 162739, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "500":
          application/problem+json: {"status": 31092, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  inspect-hostnames:
    "":
      parameters:
        path:
          mesh: "default"
          serviceType: "meshservices"
          serviceName: "redis"
      responses:
        "200":
          application/json: {"total": 200, "items": [{"hostname": "redis.redis-system.svc.east.mesh.local", "zones": [{"name": "east"}, {"name": "east"}]}, {"hostname": "redis.redis-system.svc.east.mesh.local", "zones": [{"name": "east"}, {"name": "east"}]}, {"hostname": "redis.redis-system.svc.east.mesh.local", "zones": [{"name": "east"}, {"name": "east"}]}]}
        "400":
          application/problem+json: {"status": 446583, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 188361, "title": "<value>", "instance": "<value>", "detail": "<value>"}
    ResponseForHostnames:
      parameters:
        path:
          mesh: "default"
          serviceType: "meshservices"
          serviceName: "redis"
      responses:
        "200":
          application/json: {"total": 100, "items": [{"hostname": "redis.redis-system.svc.east.mesh.local", "zones": [{"name": "east"}, {"name": "west"}]}]}
    NotFoundExample:
      parameters:
        path:
          mesh: "default"
          serviceType: "meshservices"
          serviceName: "redis"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
    speakeasy-default-inspect-hostnames:
      parameters:
        path:
          mesh: "default"
          serviceType: "meshservices"
          serviceName: "redis"
      responses:
        "200":
          application/json: {"total": 200, "items": [{"hostname": "redis.redis-system.svc.east.mesh.local", "zones": [{"name": "east"}]}]}
        "400":
          application/problem+json: {"status": 446583, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 188361, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  getMeshAccessLog:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshAccessLog:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshAccessLog:
    speakeasy-default-create-mesh-access-log:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshAccessLog", "mesh": "default", "name": "<value>", "spec": {"from": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "File"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "File"}]}, "targetRef": {"kind": "MeshMultiZoneService"}}], "rules": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}]}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}]}}], "to": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshGateway"}}]}}
      responses:
        "201":
          application/json: {}
  updateMeshAccessLog:
    speakeasy-default-update-mesh-access-log:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshAccessLog", "mesh": "default", "name": "<value>", "spec": {"from": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "File"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "File"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "File"}]}, "targetRef": {"kind": "MeshMultiZoneService"}}], "rules": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}]}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}]}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}]}}], "to": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshGateway"}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshGateway"}}]}}
      responses:
        "200":
          application/json: {}
  getMeshAccessLogList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshAccessLog", "mesh": "default", "name": "<value>", "spec": {"from": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}]}, "targetRef": {"kind": "MeshMultiZoneService"}}], "rules": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}}], "to": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshAccessLog", "mesh": "default", "name": "<value>", "spec": {"from": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "Tcp"}]}, "targetRef": {"kind": "MeshMultiZoneService"}}], "rules": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}}], "to": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}, {"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}, {"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}}, "type": "OpenTelemetry"}]}, "targetRef": {"kind": "MeshExternalService"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-access-log-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshAccessLog", "mesh": "default", "name": "<value>", "spec": {"from": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}]}, "targetRef": {"kind": "MeshHTTPRoute"}}], "rules": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Json"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "File"}]}}], "to": [{"default": {"backends": [{"file": {"format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}, "path": "/tmp/access.log"}, "openTelemetry": {"attributes": [{"key": "mesh", "value": "%KUMA_MESH%"}], "body": {"kvlistValue": {"values": [{"key": "mesh", "value": {"stringValue": "%KUMA_MESH%"}}]}}, "endpoint": "otel-collector:4317"}, "tcp": {"address": "127.0.0.1:5000", "format": {"json": [{"key": "start_time", "value": "%START_TIME%"}, {"key": "bytes_received", "value": "%BYTES_RECEIVED%"}], "omitEmptyValues": false, "plain": "[%START_TIME%] %KUMA_MESH% %UPSTREAM_HOST%", "type": "Plain"}}, "type": "Tcp"}]}, "targetRef": {"kind": "MeshHTTPRoute"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshCircuitBreaker:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshCircuitBreaker:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshCircuitBreaker:
    speakeasy-default-create-mesh-circuit-breaker:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshCircuitBreaker", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshCircuitBreaker:
    speakeasy-default-update-mesh-circuit-breaker:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshCircuitBreaker", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshCircuitBreakerList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshCircuitBreaker", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshCircuitBreaker", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-circuit-breaker-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshCircuitBreaker", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshFaultInjection:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshFaultInjection:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshFaultInjection:
    speakeasy-default-create-mesh-fault-injection:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshFaultInjection", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshFaultInjection:
    speakeasy-default-update-mesh-fault-injection:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshFaultInjection", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshFaultInjectionList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshFaultInjection", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-fault-injection-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshFaultInjection", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshHealthCheck:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshHealthCheck:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshHealthCheck:
    speakeasy-default-create-mesh-health-check:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshHealthCheck", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshHealthCheck:
    speakeasy-default-update-mesh-health-check:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshHealthCheck", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshHealthCheckList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshHealthCheck", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-health-check-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshHealthCheck", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshHTTPRoute:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshHTTPRoute:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshHTTPRoute:
    speakeasy-default-create-mesh-HTTP-route:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshHTTPRoute", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshHTTPRoute:
    speakeasy-default-update-mesh-HTTP-route:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshHTTPRoute", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshHTTPRouteList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshHTTPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshHTTPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-HTTP-route-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshHTTPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshLoadBalancingStrategy:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshLoadBalancingStrategy:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshLoadBalancingStrategy:
    speakeasy-default-create-mesh-load-balancing-strategy:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshLoadBalancingStrategy", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshLoadBalancingStrategy:
    speakeasy-default-update-mesh-load-balancing-strategy:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshLoadBalancingStrategy", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshLoadBalancingStrategyList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshLoadBalancingStrategy", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshLoadBalancingStrategy", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-load-balancing-strategy-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshLoadBalancingStrategy", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshMetric:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshMetric:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshMetric:
    speakeasy-default-create-mesh-metric:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshMetric", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshMetric:
    speakeasy-default-update-mesh-metric:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshMetric", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshMetricList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshMetric", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshMetric", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-metric-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshMetric", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshPassthrough:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshPassthrough:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshPassthrough:
    speakeasy-default-create-mesh-passthrough:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshPassthrough", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshPassthrough:
    speakeasy-default-update-mesh-passthrough:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshPassthrough", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshPassthroughList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshPassthrough", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshPassthrough", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-passthrough-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshPassthrough", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshProxyPatch:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshProxyPatch:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshProxyPatch:
    speakeasy-default-create-mesh-proxy-patch:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshProxyPatch", "mesh": "default", "name": "<value>", "spec": {"default": {}}}
      responses:
        "201":
          application/json: {}
  updateMeshProxyPatch:
    speakeasy-default-update-mesh-proxy-patch:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshProxyPatch", "mesh": "default", "name": "<value>", "spec": {"default": {}}}
      responses:
        "200":
          application/json: {}
  getMeshProxyPatchList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshProxyPatch", "mesh": "default", "name": "<value>", "spec": {"default": {}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshProxyPatch", "mesh": "default", "name": "<value>", "spec": {"default": {}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-proxy-patch-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshProxyPatch", "mesh": "default", "name": "<value>", "spec": {"default": {}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshRateLimit:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshRateLimit:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshRateLimit:
    speakeasy-default-create-mesh-rate-limit:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshRateLimit", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshRateLimit:
    speakeasy-default-update-mesh-rate-limit:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshRateLimit", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshRateLimitList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshRateLimit", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshRateLimit", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-rate-limit-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshRateLimit", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshRetry:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshRetry:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshRetry:
    speakeasy-default-create-mesh-retry:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshService"}}]}}
      responses:
        "201":
          application/json: {}
  updateMeshRetry:
    speakeasy-default-update-mesh-retry:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshMultiZoneService"}}]}}
      responses:
        "200":
          application/json: {}
  getMeshRetryList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}, {"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-retry-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshRetry", "mesh": "default", "name": "<value>", "spec": {"to": [{"default": {"grpc": {"retryOn": ["Canceled", "DeadlineExceeded", "Internal", "ResourceExhausted", "Unavailable"]}, "http": {"retryOn": ["5XX", "GatewayError", "Reset", "Retriable4xx", "ConnectFailure", "EnvoyRatelimited", "RefusedStream", "Http3PostConnectFailure", "HttpMethodConnect", "HttpMethodDelete", "HttpMethodGet", "HttpMethodHead", "HttpMethodOptions", "HttpMethodPatch", "HttpMethodPost", "HttpMethodPut", "HttpMethodTrace", "500", "503"]}}, "targetRef": {"kind": "MeshServiceSubset"}}]}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshTCPRoute:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshTCPRoute:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshTCPRoute:
    speakeasy-default-create-mesh-TCP-route:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTCPRoute", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshTCPRoute:
    speakeasy-default-update-mesh-TCP-route:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTCPRoute", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshTCPRouteList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTCPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshTCPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-TCP-route-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTCPRoute", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshTimeout:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshTimeout:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshTimeout:
    speakeasy-default-create-mesh-timeout:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTimeout", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshTimeout:
    speakeasy-default-update-mesh-timeout:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTimeout", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshTimeoutList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTimeout", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-timeout-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTimeout", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshTLS:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshTLS:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshTLS:
    speakeasy-default-create-mesh-TLS:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTLS", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshTLS:
    speakeasy-default-update-mesh-TLS:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTLS", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshTLSList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTLS", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshTLS", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-TLS-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTLS", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshTrace:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshTrace:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshTrace:
    speakeasy-default-create-mesh-trace:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTrace", "mesh": "default", "name": "<value>", "spec": {"default": {"backends": [{"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "OpenTelemetry"}, {"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "OpenTelemetry"}]}}}
      responses:
        "201":
          application/json: {}
  updateMeshTrace:
    speakeasy-default-update-mesh-trace:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTrace", "mesh": "default", "name": "<value>", "spec": {"default": {"backends": [{"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Zipkin"}, {"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Zipkin"}]}}}
      responses:
        "200":
          application/json: {}
  getMeshTraceList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTrace", "mesh": "default", "name": "<value>", "spec": {"default": {"backends": [{"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Datadog"}, {"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Datadog"}]}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshTrace", "mesh": "default", "name": "<value>", "spec": {"default": {"backends": [{"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Datadog"}, {"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Datadog"}]}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-trace-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTrace", "mesh": "default", "name": "<value>", "spec": {"default": {"backends": [{"openTelemetry": {"endpoint": "otel-collector:4317"}, "type": "Datadog"}]}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshTrafficPermission:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshTrafficPermission:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshTrafficPermission:
    speakeasy-default-create-mesh-traffic-permission:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTrafficPermission", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshTrafficPermission:
    speakeasy-default-update-mesh-traffic-permission:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshTrafficPermission", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshTrafficPermissionList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTrafficPermission", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-traffic-permission-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshTrafficPermission", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMesh:
    NotFoundExample:
      parameters:
        path:
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  putMesh:
    speakeasy-default-put-mesh:
      parameters:
        path:
          name: "<value>"
      requestBody:
        application/json: {"name": "<value>", "skipCreatingInitialPolicies": [], "type": "<value>"}
      responses:
        "200":
          application/json: {}
  deleteMesh:
    NotFoundExample:
      parameters:
        path:
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  getMeshList:
    "":
      parameters:
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
    speakeasy-default-get-mesh-list:
      parameters:
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
  getMeshGateway:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshGateway:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshGateway:
    speakeasy-default-create-mesh-gateway:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"mesh": "<value>", "name": "<value>", "selectors": [], "type": "<value>"}
      responses:
        "201":
          application/json: {}
  updateMeshGateway:
    speakeasy-default-update-mesh-gateway:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"mesh": "<value>", "name": "<value>", "selectors": [], "type": "<value>"}
      responses:
        "200":
          application/json: {}
  getMeshGatewayList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
    speakeasy-default-get-mesh-gateway-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
  getHostnameGenerator:
    NotFoundExample:
      parameters:
        path:
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteHostnameGenerator:
    NotFoundExample:
      parameters:
        path:
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createHostnameGenerator:
    speakeasy-default-create-hostname-generator:
      parameters:
        path:
          name: "<value>"
      requestBody:
        application/json: {"type": "HostnameGenerator", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateHostnameGenerator:
    speakeasy-default-update-hostname-generator:
      parameters:
        path:
          name: "<value>"
      requestBody:
        application/json: {"type": "HostnameGenerator", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getHostnameGeneratorList:
    "":
      parameters:
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "HostnameGenerator", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "HostnameGenerator", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-hostname-generator-list:
      parameters:
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "HostnameGenerator", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshExternalService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshExternalService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshExternalService:
    speakeasy-default-create-mesh-external-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 169067}], "match": {"port": 349245, "protocol": "tcp", "type": "HostnameGenerator"}}}
      responses:
        "201":
          application/json: {}
  updateMeshExternalService:
    speakeasy-default-update-mesh-external-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 770511}, {"address": "example.com", "port": 770511}], "match": {"port": 993566, "protocol": "tcp", "type": "HostnameGenerator"}}}
      responses:
        "200":
          application/json: {}
  getMeshExternalServiceList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 717874}], "match": {"port": 920900, "protocol": "tcp", "type": "HostnameGenerator"}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 717874}], "match": {"port": 920900, "protocol": "tcp", "type": "HostnameGenerator"}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 717874}], "match": {"port": 920900, "protocol": "tcp", "type": "HostnameGenerator"}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-external-service-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshExternalService", "mesh": "default", "name": "<value>", "spec": {"endpoints": [{"address": "example.com", "port": 675432}], "match": {"port": 122649, "protocol": "tcp", "type": "HostnameGenerator"}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshMultiZoneService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshMultiZoneService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshMultiZoneService:
    speakeasy-default-create-mesh-multi-zone-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshMultiZoneService", "mesh": "default", "name": "<value>", "spec": {"ports": [], "selector": {"meshService": {"matchLabels": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}}}}
      responses:
        "201":
          application/json: {}
  updateMeshMultiZoneService:
    speakeasy-default-update-mesh-multi-zone-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshMultiZoneService", "mesh": "default", "name": "<value>", "spec": {"ports": [{"appProtocol": "tcp", "port": 444602}], "selector": {"meshService": {"matchLabels": {"key": "<value>", "key1": "<value>"}}}}}
      responses:
        "200":
          application/json: {}
  getMeshMultiZoneServiceList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshMultiZoneService", "mesh": "default", "name": "<value>", "spec": {"ports": [{"appProtocol": "tcp", "port": 553761}, {"appProtocol": "tcp", "port": 553761}, {"appProtocol": "tcp", "port": 553761}], "selector": {"meshService": {"matchLabels": {"key": "<value>", "key1": "<value>"}}}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshMultiZoneService", "mesh": "default", "name": "<value>", "spec": {"ports": [{"appProtocol": "tcp", "port": 553761}, {"appProtocol": "tcp", "port": 553761}, {"appProtocol": "tcp", "port": 553761}], "selector": {"meshService": {"matchLabels": {"key": "<value>", "key1": "<value>"}}}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-multi-zone-service-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshMultiZoneService", "mesh": "default", "name": "<value>", "spec": {"ports": [], "selector": {"meshService": {"matchLabels": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}}}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshService:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshService:
    speakeasy-default-create-mesh-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshService", "mesh": "default", "name": "<value>", "spec": {"state": "Unavailable"}}
      responses:
        "201":
          application/json: {}
  updateMeshService:
    speakeasy-default-update-mesh-service:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshService", "mesh": "default", "name": "<value>", "spec": {"state": "Unavailable"}}
      responses:
        "200":
          application/json: {}
  getMeshServiceList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshService", "mesh": "default", "name": "<value>", "spec": {"state": "Unavailable"}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-service-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshService", "mesh": "default", "name": "<value>", "spec": {"state": "Unavailable"}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  createTenant:
    speakeasy-default-create-tenant:
      requestBody:
        application/json: {"features": [{"type": "MeshCreation", "meshCreation": {"enabled": false}}, {"type": "HostnameGeneratorCreation", "hostnameGeneratorCreation": {"enabled": false}}]}
      responses:
        "400":
          application/problem+json: {"status": 127088, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "500":
          application/problem+json: {"status": 84369, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  getMeshGlobalRateLimit:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshGlobalRateLimit:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshGlobalRateLimit:
    speakeasy-default-create-mesh-global-rate-limit:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshGlobalRateLimit", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshGlobalRateLimit:
    speakeasy-default-update-mesh-global-rate-limit:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshGlobalRateLimit", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshGlobalRateLimitList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshGlobalRateLimit", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-global-rate-limit-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshGlobalRateLimit", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getMeshOPA:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteMeshOPA:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createMeshOPA:
    speakeasy-default-create-mesh-OPA:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "201":
          application/json: {}
  updateMeshOPA:
    speakeasy-default-update-mesh-OPA:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}}
      responses:
        "200":
          application/json: {}
  getMeshOPAList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}, {"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
    speakeasy-default-get-mesh-OPA-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {"items": [{"type": "MeshOPA", "mesh": "default", "name": "<value>", "spec": {}, "creationTime": "0001-01-01T00:00:00Z", "modificationTime": "0001-01-01T00:00:00Z"}]}
  getDataplaneOverview:
    speakeasy-default-get-dataplane-overview:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "200":
          application/json: {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}
        "400":
          application/problem+json: {"status": 389461, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "500":
          application/problem+json: {"status": 804001, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  getDataplaneOverviewList:
    speakeasy-default-get-dataplane-overview-list:
      parameters:
        path:
          mesh: "<value>"
      responses:
        "200":
          application/json: {"total": 200, "items": [{"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}, {"type": "Dataplane", "mesh": "default", "name": "my-resource", "labels": {"k8s.kuma.io/namespace": "kuma-system", "kuma.io/display-name": "mtp", "kuma.io/mesh": "default", "kuma.io/origin": "zone"}}]}
        "400":
          application/problem+json: {"status": 483130, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "500":
          application/problem+json: {"status": 346828, "title": "<value>", "instance": "<value>", "detail": "<value>"}
  getDataplane:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  deleteDataplane:
    NotFoundExample:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "instance": "kong:trace:6816496025408232265", "detail": "Not Found"}
  createDataplane:
    speakeasy-default-create-dataplane:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"mesh": "<value>", "name": "<value>", "type": "<value>"}
      responses:
        "201":
          application/json: {}
  updateDataplane:
    speakeasy-default-update-dataplane:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"mesh": "<value>", "name": "<value>", "type": "<value>"}
      responses:
        "200":
          application/json: {}
  getDataplaneList:
    "":
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
    speakeasy-default-get-dataplane-list:
      parameters:
        path:
          mesh: "<value>"
        query:
          offset: 0
          size: 100
          filter: {}
      responses:
        "200":
          application/json: {}
  putDataplane:
    speakeasy-default-put-dataplane:
      parameters:
        path:
          mesh: "<value>"
          name: "<value>"
      requestBody:
        application/json: {"mesh": "<value>", "name": "<value>", "type": "<value>"}
      responses:
        "200":
          application/json: {}
examplesVersion: 1.0.2
generatedTests: {}
