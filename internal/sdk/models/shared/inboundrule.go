// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type InboundRule struct {
	// The final computed configuration for the data plane proxy, derived by merging all policies whose 'targetRef' field matches the proxy. The merging process follows [RFC 7396 (JSON Merge Patch)](https://datatracker.ietf.org/doc/html/rfc7396), with the order of merging influenced by factors such as where the policy was applied (e.g., custom namespace, system, or global control plane), policy role, and targetRef specificity.
	Conf []map[string]any `json:"conf"`
	// The list of policies that contributed to the 'conf'. The order is important as it reflects in what order confs were merged to get the resulting 'conf'.
	Origin []ResourceRuleOrigin `json:"origin"`
}

func (o *InboundRule) GetConf() []map[string]any {
	if o == nil {
		return []map[string]any{}
	}
	return o.Conf
}

func (o *InboundRule) GetOrigin() []ResourceRuleOrigin {
	if o == nil {
		return []ResourceRuleOrigin{}
	}
	return o.Origin
}
