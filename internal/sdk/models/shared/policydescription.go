// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

// PolicyDescription - information about a policy
type PolicyDescription struct {
	// whether this policy uses targetRef matching
	IsTargetRef bool `json:"isTargetRef"`
	// indicates that this policy can be used as an outbound policy
	HasToTargetRef bool `json:"hasToTargetRef"`
	// indicates that this policy can be used as an inbound policy
	HasFromTargetRef bool `json:"hasFromTargetRef"`
	// If set to `true`, performs a backward compatibility conversion from the deprecated 'from' array to the new 'rules' array. This ensures older policies remain functional under the updated schema.
	IsFromAsRules bool `json:"isFromAsRules"`
}

func (o *PolicyDescription) GetIsTargetRef() bool {
	if o == nil {
		return false
	}
	return o.IsTargetRef
}

func (o *PolicyDescription) GetHasToTargetRef() bool {
	if o == nil {
		return false
	}
	return o.HasToTargetRef
}

func (o *PolicyDescription) GetHasFromTargetRef() bool {
	if o == nil {
		return false
	}
	return o.HasFromTargetRef
}

func (o *PolicyDescription) GetIsFromAsRules() bool {
	if o == nil {
		return false
	}
	return o.IsFromAsRules
}
