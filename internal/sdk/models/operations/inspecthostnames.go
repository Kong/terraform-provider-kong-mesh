// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/kong/terraform-provider-kong-mesh/internal/sdk/models/shared"
	"net/http"
)

// ServiceType - The type of the service
type ServiceType string

const (
	ServiceTypeMeshservices          ServiceType = "meshservices"
	ServiceTypeMeshmultizoneservices ServiceType = "meshmultizoneservices"
	ServiceTypeMeshexternalservices  ServiceType = "meshexternalservices"
)

func (e ServiceType) ToPointer() *ServiceType {
	return &e
}
func (e *ServiceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "meshservices":
		fallthrough
	case "meshmultizoneservices":
		fallthrough
	case "meshexternalservices":
		*e = ServiceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceType: %v", v)
	}
}

type InspectHostnamesRequest struct {
	// The mesh the service is part of
	Mesh string `pathParam:"style=simple,explode=false,name=mesh"`
	// The type of the service
	ServiceType ServiceType `pathParam:"style=simple,explode=false,name=serviceType"`
	// The name of the service
	ServiceName string `pathParam:"style=simple,explode=false,name=serviceName"`
}

func (o *InspectHostnamesRequest) GetMesh() string {
	if o == nil {
		return ""
	}
	return o.Mesh
}

func (o *InspectHostnamesRequest) GetServiceType() ServiceType {
	if o == nil {
		return ServiceType("")
	}
	return o.ServiceType
}

func (o *InspectHostnamesRequest) GetServiceName() string {
	if o == nil {
		return ""
	}
	return o.ServiceName
}

type InspectHostnamesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A response containing hostnames that match a service.
	InspectHostnames *shared.InspectHostnames
	// Bad Request
	BadRequestError *shared.BadRequestError
	// Not Found
	NotFoundError *shared.NotFoundError
	// Internal
	BaseError *shared.BaseError
}

func (o *InspectHostnamesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *InspectHostnamesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *InspectHostnamesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *InspectHostnamesResponse) GetInspectHostnames() *shared.InspectHostnames {
	if o == nil {
		return nil
	}
	return o.InspectHostnames
}

func (o *InspectHostnamesResponse) GetBadRequestError() *shared.BadRequestError {
	if o == nil {
		return nil
	}
	return o.BadRequestError
}

func (o *InspectHostnamesResponse) GetNotFoundError() *shared.NotFoundError {
	if o == nil {
		return nil
	}
	return o.NotFoundError
}

func (o *InspectHostnamesResponse) GetBaseError() *shared.BaseError {
	if o == nil {
		return nil
	}
	return o.BaseError
}
